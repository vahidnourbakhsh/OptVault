name: check formatting + run tests

on: [push, pull_request, workflow_dispatch]

jobs:
  python-workflow:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
      max-parallel: 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        channels: conda-forge,defaults

    - name: Install GLPK solver
      shell: bash -l {0}
      run: |
        conda install -c conda-forge glpk

    - name: Install Python dependencies
      shell: bash -l {0}
      run: |
        pip install -e ".[dev]"

    - name: Verify GLPK installation
      shell: bash -l {0}
      run: |
        python -c "import subprocess; print('GLPK version:', subprocess.run(['glpsol', '--version'], capture_output=True, text=True).stdout.split()[0] if subprocess.run(['glpsol', '--version'], capture_output=True, text=True).returncode == 0 else 'Not found')"

    - name: Format check with Black
      shell: bash -l {0}
      run: |
        black --check --verbose src/ tests/

    - name: Test with pytest and coverage
      shell: bash -l {0}
      run: |
        pytest tests/ -v --tb=short --cov=src/optvault --cov-report=xml --cov-report=term

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.10'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Check package installation
      shell: bash -l {0}
      run: |
        python -c "import optvault; print('OptVault version:', optvault.__version__)"
